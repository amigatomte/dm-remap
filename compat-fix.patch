diff --git a/src/compat.h b/src/compat.h
index 0000000..1111111 100644
--- a/src/compat.h
+++ b/src/compat.h
@@
 #ifndef DM_REMAP_COMPAT_H
 #define DM_REMAP_COMPAT_H

 #include <linux/version.h>
 #include <linux/device-mapper.h>
 #include <linux/bio.h>

+/*
+ * Per-bio data shim:
+ * - Newer kernels (>= 6.14): dm_per_bio_data() takes (bio, size)
+ * - Older kernels: dm_per_bio_data() takes only (bio)
+ */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,14,0)
+#define dmr_per_bio_data(bio, type) \
+   ((type *)dm_per_bio_data((bio), sizeof(type)))
+#else
+#define dmr_per_bio_data(bio, type) \
+   ((type *)dm_per_bio_data((bio)))
+#endif
+
+/*
+ * Bio clone shims:
+ * - Newer kernels (>= 6.12): use bio_dup() / bio_alloc_clone()
+ * - Older kernels: use bio_clone_fast() / bio_clone_bioset()
+ */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,12,0)
+static inline struct bio *dmr_bio_clone_shallow(struct bio *bio, gfp_t gfp)
+{
+   return bio_dup(bio, gfp);
+}
+static inline struct bio *dmr_bio_clone_deep(struct bio *bio, gfp_t gfp)
+{
+   return bio_alloc_clone(bio, gfp, NULL);
+}
+#else
+extern struct bio_set dm_remap_bioset;
+static inline struct bio *dmr_bio_clone_shallow(struct bio *bio, gfp_t gfp)
+{
+   return bio_clone_fast(bio, gfp, &dm_remap_bioset);
+}
+static inline struct bio *dmr_bio_clone_deep(struct bio *bio, gfp_t gfp)
+{
+   return bio_clone_bioset(bio, gfp, &dm_remap_bioset);
+}
+#endif
+
 #endif /* DM_REMAP_COMPAT_H */
diff --git a/src/dm-remap.c b/src/dm-remap.c
index 0000000..2222222 100644
--- a/src/dm-remap.c
+++ b/src/dm-remap.c
@@
 #include <linux/module.h>
 #include <linux/init.h>
 #include <linux/device-mapper.h>
+#include "compat.h"
@@
-struct bio_set dm_remap_bioset;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,12,0)
+struct bio_set dm_remap_bioset;
+#endif
@@
 static struct target_type remap_target = {
    .name   = "remap",
    .version = {1, 0, 0},
    .module = THIS_MODULE,
    .ctr    = remap_ctr,
    .dtr    = remap_dtr,
    .map    = remap_map,
    .end_io = remap_end_io,
+   .per_io_data_size = sizeof(struct remap_io_ctx),
 };
@@
 static int remap_ctr(struct dm_target *ti, unsigned int argc, char **argv)
 {
-   if (bioset_init(&dm_remap_bioset, BIO_POOL_SIZE, 0, BIOSET_NEED_BVECS))
-       return -ENOMEM;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,12,0)
+   if (bioset_init(&dm_remap_bioset, BIO_POOL_SIZE, 0, BIOSET_NEED_BVECS))
+       return -ENOMEM;
+#endif
@@
 static void remap_dtr(struct dm_target *ti)
 {
-   bioset_exit(&dm_remap_bioset);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,12,0)
+   bioset_exit(&dm_remap_bioset);
+#endif
 }
