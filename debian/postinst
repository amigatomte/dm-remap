#!/bin/bash

set -e

# #DEBHELPER#

PACKAGE_NAME="dm-remap"
PACKAGE_VERSION="1.0.0"

# Post-install: Register with DKMS and build modules
if [ "$1" = "configure" ]; then
    echo "Registering ${PACKAGE_NAME} ${PACKAGE_VERSION} with DKMS..."
    
    # Check if DKMS is installed
    if ! command -v dkms &> /dev/null; then
        echo "WARNING: DKMS is not installed. Cannot register modules."
        echo "Install dkms package manually: apt-get install dkms"
        exit 0
    fi
    
    # Add to DKMS if not already added
    if ! dkms add -m "${PACKAGE_NAME}" -v "${PACKAGE_VERSION}" 2>&1 | grep -q "already added"; then
        echo "${PACKAGE_NAME} ${PACKAGE_VERSION} successfully registered with DKMS"
    else
        echo "${PACKAGE_NAME} ${PACKAGE_VERSION} already registered with DKMS"
    fi
    
    # Build for current kernel if headers are available
    if [ -d /lib/modules/$(uname -r)/build ]; then
        echo "Building for kernel $(uname -r)..."
        if dkms build -m "${PACKAGE_NAME}" -v "${PACKAGE_VERSION}" -k "$(uname -r)" >/dev/null 2>&1; then
            echo "Installing built modules for kernel $(uname -r)..."
            dkms install -m "${PACKAGE_NAME}" -v "${PACKAGE_VERSION}" -k "$(uname -r)" >/dev/null 2>&1 || true
        else
            echo "Note: Module build deferred - kernel headers may not be installed"
        fi
    else
        echo "Note: Kernel headers not found for $(uname -r) - build deferred"
    fi
    
    # Update module dependencies
    depmod -a || true
    
    echo ""
    echo "dm-remap kernel module registered with DKMS"
    echo ""
    echo "To load the module, run:"
    echo "  sudo modprobe dm_remap"
    echo ""
    echo "For more information, visit:"
    echo "  /usr/share/doc/dm-remap/"
fi
